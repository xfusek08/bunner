#!/bin/bash

# Generated by Chat GPT

function print_csv() {
    # parse options -d for delimiter/separator and --colors for color setting csv string, use getopt
    local separator=";"
    local colors=""
    
    local opts=$(getopt -o d: --long colors: -- "$@")
    for opt in $opts; do
        case $opt in
            -d)
                separator=$2
                shift 2
                ;;
            --colors)
                colors=$2
                shift 2
                ;;
            --)
                shift
                break
                ;;
        esac
    done
    
    local term_width=$(tput cols)
    
    local color_map=()
    if [ -n "$colors" ]; then
        IFS=';' read -r -a color_map <<< "$colors"
    fi
    
    local input=$(cat)
    local widths=()
    local num_columns=$(awk -F"$separator" '{print NF}' <<< "$input" | sort -nu | tail -n 1)
    for i in $(seq 1 $num_columns); do
        widths+=($(awk -F"$separator" -v i=$i '{print length($i)}' <<< "$input" | sort -nu | tail -n 1))
    done

    local last_column_width=${widths[-1]}
    local stretch_width=$((term_width - last_column_width))
    widths[-1]=$stretch_width

    # Convert color_map array to a string that can be passed to awk
    local color_string=$(IFS=,; echo "${color_map[*]}")

    # Print each row without borders, now with color support
    awk -F"$separator" \
        -v widths="${widths[*]}" \
        -v colors="$color_string" \
        -v separator="$separator" \
        -v num_columns=$num_columns \
        -v last_column_width=$last_column_width \
        -v stretch_width=$stretch_width \
        'BEGIN {
            split(widths, widths_arr, " ");
            split(colors, colors_arr, ",");
        }
        {
            for (i = 1; i <= num_columns; i++) {
                if (colors_arr[i] != "") {
                    printf "\033[" colors_arr[i] "m%-" widths_arr[i] "s\033[0m", $i;
                } else {
                    printf "%-" widths_arr[i] "s", $i;
                }
                if (i < num_columns) printf " ";
            }
            printf "\n";
        }' <<< "$input"
}
