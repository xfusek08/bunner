#!/bin/sh

run_in_bun_docker() {
    #------------------------------------------------------
    # Setup paths and directories
    #------------------------------------------------------
    # Get absolute path of this script file no matter where it was sourced or called from
    local thisScriptFileLocation=$(readlink -f "$0")
    thisScriptFileLocation=$(dirname "$thisScriptFileLocation")
    
    local directory="$(pwd)"
    
    #------------------------------------------------------
    # Build Docker image if it doesn't exist
    #------------------------------------------------------
    if ! docker image inspect bun-docker-alpine:latest > /dev/null 2>&1; then
        echo "Building bun-docker-alpine image..."
        cd "$thisScriptFileLocation"
        docker build -t bun-docker-alpine:latest -f Dockerfile .
        cd "$directory"
    fi
    
    #------------------------------------------------------
    # Setup Docker socket permissions
    #------------------------------------------------------
    # Get host's Docker socket group ID
    DOCKER_GID=$(stat -c '%g' /var/run/docker.sock 2>/dev/null || echo 0)
    
    #------------------------------------------------------
    # Setup commands directory (if provided)
    #------------------------------------------------------
    local commandsDirectory=""
    if [ -n "$1" ]; then
        commandsDirectory="$1"
        shift
        commandsDirectory=$(readlink -f "$commandsDirectory")
    fi
    
    #------------------------------------------------------
    # Determine container name (bunner, bunner_1, bunner_2, etc.)
    #------------------------------------------------------
    local container_name="bunner"
    local counter=1
    
    while docker container inspect "$container_name" >/dev/null 2>&1; do
        container_name="bunner_$counter"
        counter=$((counter + 1))
    done
    
    #------------------------------------------------------
    # Run Bun in Docker container
    #------------------------------------------------------
    docker run \
        --init \
        --interactive \
        --tty \
        --rm \
        --name "$container_name" \
        --env TERM="$TERM" \
        --env COLUMNS="${COLUMNS:-$(tput cols)}" \
        --env LINES="${LINES:-$(tput lines)}" \
        --env BUNNER_ENTRY_POINT_DIRECTORY="$thisScriptFileLocation" \
        --volume "$directory:$directory" \
        --volume "$thisScriptFileLocation:$thisScriptFileLocation" \
        --volume /var/run/docker.sock:/var/run/docker.sock \
        --group-add "$DOCKER_GID" \
        --workdir "$directory" \
        --user bun \
        bun-docker-alpine:latest \
        bun "$thisScriptFileLocation/entry.ts" ${commandsDirectory:+"$commandsDirectory"} "$@"
}

# Execute the function with all arguments passed to the script
run_in_bun_docker "$@"
